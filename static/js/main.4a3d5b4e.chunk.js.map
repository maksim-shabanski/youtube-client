{"version":3,"sources":["components/Button/index.js","components/Search/index.js","components/Alert/index.js","components/Spinner/index.js","utilities/trimNumber.js","components/Card/index.js","utilities/constants.js","components/Slider/index.js","services/youtubeAPI.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Button","Component","as","className","variant","color","disabled","props","modifierColor","classes","classNames","tabIndex","defaultProps","type","displayName","Search","searchText","onChange","onSubmit","value","placeholder","Alert","children","Spinner","elemClass","body","trimNumber","number","result","toFixed","endsWith","slice","Math","floor","dayjs","extend","relativeTime","VIDEO_PATH","Card","videoData","id","snippet","statistics","channelId","channelTitle","publishedAt","title","description","imageUrl","thumbnails","high","url","viewCount","oneLineDesc","replace","href","src","alt","dateTime","to","ANIMATION_DURATION","CARD_WIDTH","Slider","React","forwardRef","ref","videosDataMap","selectedSlide","totalSlides","isExistMoreSlides","totalCardsOnSlide","onControlClick","mouseEventsProps","videoCards","sliderTrackWidth","size","sliderTrackPosition","sliderTrackStyles","width","transform","isDisabledPrevBtn","isDisabledNextBtn","nextBtnCaption","forEach","videoHash","card","key","push","style","data-direction","onClick","YouTubeAPI","path","buildUrlQueryString","typeResource","part","join","fetch","response","videosData","json","pageToken","maxResults","q","videosId","otherParams","Object","keys","param","App","state","alert","text","isLoadingData","showSpinner","maxVideoResults","getTotalCardsOnSlide","numberFirstCardOnSelectedSlide","isSliderAnimated","mouseStartPoint","Map","sliderTrack","createRef","handleResizeWindow","newTotalCardsOnSlide","ceil","setState","handleSearchTextChange","target","handleSubmitForm","e","preventDefault","getVideosData","handleControlBtnClick","direction","currentTarget","dataset","canChangeSlide","handleSlideChange","handleDragStart","touches","clientX","handleDrag","mouseCurrentPoint","getDirection","dragDistance","abs","newSliderTrackPositon","current","transitionDuration","handleDragEnd","mouseEndPoint","changedTouches","handleSliderClick","isLoadingDataStart","newSelectedSlide","isNeedToLoadCards","updateSliderAnimatedState","a","currentVideosDataMap","videosIds","getBasicVideosData","basicVideosData","nextPageToken","items","videoId","has","length","youTubeAPI","fetchExtendedVideosData","extendedVideosData","set","stateOptions","fetchBasicVideosData","data","window","setTimeout","getTotalSlides","addEventListener","this","removeEventListener","alertVariant","alertText","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","innerWidth","startPoint","endPoint","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a3d5b4e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './button.scss';\n\nconst propTypes = {\n  as: PropTypes.elementType,\n  type: PropTypes.oneOf(['button', 'submit', 'reset', null]),\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', null]),\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n  as: 'button',\n  type: null,\n  className: null,\n  variant: null,\n  color: 'primary',\n  disabled: false,\n};\n\nconst Button = ({\n  as: Component,\n  className,\n  variant,\n  color,\n  disabled,\n  ...props\n}) => {\n  const prefix = 'btn';\n  const modifierColor = variant ? `${variant}-${color}` : color;\n  const classes = classNames(className, prefix, `${prefix}--${modifierColor}`);\n\n  if (disabled) {\n    props.disabled = disabled;\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <Component className={classes} {...props} />\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/Button';\nimport './search.scss';\n\nconst propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  onSubmit: () => {},\n};\n\nconst Search = ({ searchText, onChange, onSubmit }) => (\n  <div className=\"search\">\n    <form className=\"search__form\" onSubmit={onSubmit}>\n      <input\n        className=\"search__input\"\n        type=\"text\"\n        value={searchText}\n        onChange={onChange}\n        placeholder=\"Type keywords to find video\"\n      />\n      <Button className=\"search__btn\" type=\"submit\" color=\"grey\">\n        Find\n      </Button>\n    </form>\n  </div>\n);\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './alert.scss';\n\nconst propTypes = {\n  children: PropTypes.string.isRequired,\n  as: PropTypes.elementType,\n  variant: PropTypes.oneOf(['warning', null]),\n};\n\nconst defaultProps = {\n  as: 'div',\n  variant: null,\n};\n\nconst Alert = ({ as: Component, variant, children }) => {\n  const prefix = 'alert';\n  const classes = classNames(prefix, variant && `${prefix}--${variant}`);\n  return <Component className={classes}>{children}</Component>;\n};\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nAlert.displayName = 'Alert';\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './spinner.scss';\n\nconst propTypes = {\n  variant: PropTypes.string.isRequired,\n  as: PropTypes.elementType,\n};\n\nconst defaultProps = {\n  as: 'div',\n};\n\nconst Spinner = ({ as: Component, variant }) => {\n  const prefix = 'spinner';\n  const elemClass = `${prefix}__figure`;\n  const classes = classNames(elemClass, `${elemClass}--${variant}`);\n\n  let body = <span className={classes} />;\n\n  if (variant === 'bounce') {\n    body = (\n      <>\n        <span className={classes} />\n        <span className={classes} />\n        <span className={classes} />\n      </>\n    );\n  }\n\n  return <Component className={prefix}>{body}</Component>;\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nSpinner.displayName = 'Spinner';\n\nexport default Spinner;\n","const trimNumber = number => {\n  if (number / 1000000 >= 1) {\n    let result = (number / 1000000).toFixed(2);\n\n    if (result.endsWith('0')) {\n      result = result.slice(0, -1);\n    }\n\n    return `${result}M`;\n  }\n\n  if (number / 1000 >= 1) {\n    return `${Math.floor(number / 1000)}K`;\n  }\n\n  return number;\n};\n\nexport default trimNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport Button from 'components/Button';\nimport trimNumber from 'utilities/trimNumber';\nimport './card.scss';\n\ndayjs.extend(relativeTime);\n\nconst VIDEO_PATH = 'https://www.youtube.com/watch?v=';\nconst CHANNEL_PATH = 'https://www.youtube.com/channel/';\n\nconst propTypes = {\n  videoData: PropTypes.shape({\n    id: PropTypes.string,\n    snippet: PropTypes.shape({\n      channelId: PropTypes.string,\n      channelTitle: PropTypes.string,\n      publishedAt: PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n      thumbnails: PropTypes.shape({\n        high: PropTypes.shape({\n          url: PropTypes.string,\n        }),\n      }),\n    }),\n    statistics: PropTypes.shape({\n      viewCount: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nconst Card = ({ videoData }) => {\n  const { id, snippet, statistics } = videoData;\n  const {\n    channelId,\n    channelTitle,\n    publishedAt,\n    title,\n    description,\n    thumbnails,\n  } = snippet;\n  const {\n    high: { url: imageUrl },\n  } = thumbnails;\n  const { viewCount } = statistics;\n  const oneLineDesc = description.replace(/[\\n\\t]/g, '');\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__thumbnail\">\n        <a href={`${VIDEO_PATH}${id}`}>\n          <img className=\"card__img\" src={imageUrl} alt=\"\" />\n        </a>\n      </div>\n      <div className=\"card__body\">\n        <div className=\"card__author\">\n          <a href={`${CHANNEL_PATH}${channelId}`} className=\"card__author-link\">\n            {channelTitle}\n          </a>\n        </div>\n        <h2 className=\"card__title\">\n          <a\n            href={`${VIDEO_PATH}${id}`}\n            className=\"card__title-link\"\n            title={title}\n          >\n            {title}\n          </a>\n        </h2>\n        <div className=\"card__metadata\">\n          <span className=\"card__views\">{trimNumber(viewCount)} views</span>\n          <time className=\"card__date\" dateTime={publishedAt}>\n            {dayjs().to(publishedAt)}\n          </time>\n        </div>\n        <div className=\"card__desc\">\n          <p>{oneLineDesc || 'No description'}</p>\n        </div>\n        <Button\n          href={`${VIDEO_PATH}${id}`}\n          as=\"a\"\n          variant=\"outlined\"\n          color=\"red\"\n        >\n          Watch video\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = propTypes;\n\nexport default Card;\n","export const YOUTUBE_API_URL = 'https://www.googleapis.com/youtube/v3';\nexport const YOUTUBE_API_KEY = 'AIzaSyCa9jR_UScpOg4BAgwC2kdjc9U1dZh1kkY';\nexport const ANIMATION_DURATION = 500;\nexport const CARD_WIDTH = 310;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from 'components/Spinner';\nimport Card from 'components/Card';\nimport Button from 'components/Button';\nimport { CARD_WIDTH } from 'utilities/constants';\nimport './slider.scss';\n\nconst propTypes = {\n  videosDataMap: PropTypes.instanceOf(Map).isRequired,\n  selectedSlide: PropTypes.number,\n  totalSlides: PropTypes.number,\n  totalCardsOnSlide: PropTypes.number,\n  isExistMoreSlides: PropTypes.bool,\n  onControlClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  selectedSlide: 1,\n  totalSlides: 1,\n  totalCardsOnSlide: 1,\n  isExistMoreSlides: true,\n  onControlClick: () => {},\n};\n\nconst Slider = React.forwardRef((props, ref) => {\n  const {\n    videosDataMap,\n    selectedSlide,\n    totalSlides,\n    isExistMoreSlides,\n    totalCardsOnSlide,\n    onControlClick,\n    ...mouseEventsProps\n  } = props;\n  const videoCards = [];\n  const sliderTrackWidth = videosDataMap.size * CARD_WIDTH;\n  const sliderTrackPosition =\n    (selectedSlide - 1) * CARD_WIDTH * totalCardsOnSlide;\n\n  const sliderTrackStyles = {\n    width: `${sliderTrackWidth}px`,\n    transform: `translate3d(-${sliderTrackPosition}px, 0, 0)`,\n  };\n\n  const isDisabledPrevBtn = selectedSlide === 1;\n  const isDisabledNextBtn = selectedSlide === totalSlides;\n\n  let nextBtnCaption = 'Next';\n\n  if (isExistMoreSlides && selectedSlide === totalSlides) {\n    nextBtnCaption = <Spinner variant=\"bounce\" as=\"span\" />;\n  }\n\n  videosDataMap.forEach((videoData, videoHash) => {\n    // eslint-disable-next-line react/no-array-index-key\n    const card = <Card key={videoHash} videoData={videoData} />;\n    videoCards.push(card);\n  });\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider__content\" {...mouseEventsProps}>\n        <div ref={ref} className=\"slider__track\" style={sliderTrackStyles}>\n          {videoCards}\n        </div>\n      </div>\n      <div className=\"slider__controls\">\n        <Button\n          type=\"button\"\n          className=\"slider__btn\"\n          color=\"grey\"\n          data-direction=\"prev\"\n          disabled={isDisabledPrevBtn}\n          onClick={onControlClick}\n        >\n          Prev\n        </Button>\n        <span className=\"slider__current-page\">{selectedSlide}</span>\n        <Button\n          type=\"button\"\n          className=\"slider__btn\"\n          color=\"grey\"\n          data-direction=\"next\"\n          disabled={isDisabledNextBtn}\n          onClick={onControlClick}\n        >\n          {nextBtnCaption}\n        </Button>\n      </div>\n    </div>\n  );\n});\n\nSlider.propTypes = propTypes;\nSlider.defaultProps = defaultProps;\nSlider.displayName = 'Slider';\n\nexport default Slider;\n","import { YOUTUBE_API_URL, YOUTUBE_API_KEY } from 'utilities/constants';\n\nclass YouTubeAPI {\n  static async fetchExtendedVideosData(id) {\n    const path = YouTubeAPI.buildUrlQueryString({\n      typeResource: 'videos',\n      part: 'snippet,statistics',\n      id: id.join(','),\n    });\n    const response = await fetch(path);\n    const videosData = response.json();\n    return videosData;\n  }\n\n  static async fetchBasicVideosData(searchText, pageToken, maxResults) {\n    const path = YouTubeAPI.buildUrlQueryString({\n      typeResource: 'search',\n      type: 'video',\n      part: 'snippet',\n      q: searchText,\n      maxResults,\n      ...(pageToken && { pageToken }),\n    });\n    const response = await fetch(path);\n    const videosId = response.json();\n    return videosId;\n  }\n\n  static buildUrlQueryString({ typeResource, ...otherParams }) {\n    let path = `${YOUTUBE_API_URL}/${typeResource}?key=${YOUTUBE_API_KEY}`;\n\n    Object.keys(otherParams).forEach(param => {\n      path += `&${param}=${otherParams[param]}`;\n    });\n\n    return path;\n  }\n}\n\nexport default YouTubeAPI;\n","import React, { Component } from 'react';\n\nimport Search from 'components/Search';\nimport Alert from 'components/Alert';\nimport Spinner from 'components/Spinner';\nimport Slider from 'components/Slider';\nimport youTubeAPI from 'services/youtubeAPI';\nimport { ANIMATION_DURATION, CARD_WIDTH } from 'utilities/constants';\nimport './app.scss';\n\nclass App extends Component {\n  static getTotalCardsOnSlide() {\n    const { innerWidth } = window;\n    let totalCardsOnSlide = 0;\n\n    if (innerWidth >= 1280) {\n      totalCardsOnSlide = 4;\n    } else if (innerWidth >= 940 && innerWidth < 1280) {\n      totalCardsOnSlide = 3;\n    } else if (innerWidth >= 640 && innerWidth < 940) {\n      totalCardsOnSlide = 2;\n    } else {\n      totalCardsOnSlide = 1;\n    }\n\n    return totalCardsOnSlide;\n  }\n\n  static getDirection(startPoint, endPoint) {\n    const dragDistance = startPoint - endPoint;\n\n    if (dragDistance === 0) {\n      return undefined;\n    }\n\n    let direction = 'next';\n\n    if (dragDistance < 0) {\n      direction = 'prev';\n    }\n\n    return direction;\n  }\n\n  state = {\n    searchText: '',\n    alert: {\n      text: \"You haven't searched anything yet.\",\n      variant: null,\n    },\n    isLoadingData: false,\n    showSpinner: false,\n    maxVideoResults: 24,\n    pageToken: '',\n    selectedSlide: 1,\n    totalCardsOnSlide: App.getTotalCardsOnSlide(),\n    numberFirstCardOnSelectedSlide: 1,\n    isSliderAnimated: false,\n    mouseStartPoint: null,\n    videosDataMap: new Map(),\n  };\n\n  sliderTrack = React.createRef();\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResizeWindow);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResizeWindow);\n  }\n\n  getTotalSlides() {\n    const { videosDataMap, totalCardsOnSlide } = this.state;\n    return Math.ceil(videosDataMap.size / totalCardsOnSlide);\n  }\n\n  handleResizeWindow = () => {\n    const { totalCardsOnSlide, numberFirstCardOnSelectedSlide } = this.state;\n    const newTotalCardsOnSlide = App.getTotalCardsOnSlide();\n\n    if (totalCardsOnSlide === newTotalCardsOnSlide) {\n      return false;\n    }\n\n    const selectedSlide = Math.ceil(\n      numberFirstCardOnSelectedSlide / newTotalCardsOnSlide\n    );\n\n    this.setState({\n      selectedSlide,\n      totalCardsOnSlide: newTotalCardsOnSlide,\n    });\n\n    return true;\n  };\n\n  handleSearchTextChange = ({ target: { value } }) => {\n    this.setState({\n      searchText: value,\n    });\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n\n    const { searchText } = this.state;\n\n    if (searchText === '') {\n      return false;\n    }\n\n    this.setState(\n      {\n        selectedSlide: 1,\n        numberFirstCardOnSelectedSlide: 1,\n        videosDataMap: new Map(),\n        pageToken: '',\n        alert: {\n          text: null,\n          variant: null,\n        },\n        showSpinner: true,\n        isLoadingData: true,\n      },\n      () => {\n        this.getVideosData();\n      }\n    );\n\n    return true;\n  };\n\n  handleControlBtnClick = e => {\n    const { direction } = e.currentTarget.dataset;\n\n    if (!this.canChangeSlide(direction)) {\n      return false;\n    }\n\n    this.handleSlideChange(direction);\n    return true;\n  };\n\n  handleDragStart = e => {\n    const { isSliderAnimated } = this.state;\n    const mouseStartPoint = e.touches ? e.touches[0].clientX : e.clientX;\n\n    // Prevent to drag links and images with the mouse\n    if (!e.touches) {\n      e.preventDefault();\n    }\n\n    if (!isSliderAnimated) {\n      this.setState({ mouseStartPoint });\n    }\n  };\n\n  handleDrag = e => {\n    const { selectedSlide, totalCardsOnSlide, mouseStartPoint } = this.state;\n    const mouseCurrentPoint = e.touches ? e.touches[0].clientX : e.clientX;\n\n    if (!mouseStartPoint) {\n      return false;\n    }\n\n    const direction = App.getDirection(mouseStartPoint, mouseCurrentPoint);\n\n    if (!direction) {\n      return false;\n    }\n\n    const dragDistance = Math.abs(mouseStartPoint - mouseCurrentPoint);\n    const sliderTrackPosition =\n      (selectedSlide - 1) * CARD_WIDTH * totalCardsOnSlide;\n\n    const newSliderTrackPositon =\n      direction === 'next'\n        ? sliderTrackPosition + dragDistance\n        : sliderTrackPosition - dragDistance;\n\n    const sliderTrack = this.sliderTrack.current;\n    sliderTrack.style.transitionDuration = '0ms';\n    sliderTrack.style.transform = `translate3d(-${newSliderTrackPositon}px, 0, 0)`;\n\n    return true;\n  };\n\n  handleDragEnd = e => {\n    const { mouseStartPoint } = this.state;\n\n    if (!mouseStartPoint) {\n      return false;\n    }\n\n    const mouseEndPoint = e.changedTouches\n      ? e.changedTouches[0].clientX\n      : e.clientX;\n    const direction = App.getDirection(mouseStartPoint, mouseEndPoint);\n\n    if (!direction || !this.canChangeSlide(direction)) {\n      this.setState({ mouseStartPoint: null });\n      return false;\n    }\n\n    this.sliderTrack.current.style.transitionDuration = `${ANIMATION_DURATION}ms`;\n    this.handleSlideChange(direction);\n\n    return true;\n  };\n\n  handleSliderClick = e => {\n    const { isSliderAnimated } = this.state;\n\n    // Prevent to go a link after mouseup event\n    if (isSliderAnimated) {\n      e.preventDefault();\n    }\n  };\n\n  handleSlideChange = direction => {\n    let isLoadingDataStart = false;\n    const { totalCardsOnSlide, selectedSlide, isLoadingData } = this.state;\n    const newSelectedSlide =\n      direction === 'next' ? selectedSlide + 1 : selectedSlide - 1;\n    const numberFirstCardOnSelectedSlide =\n      (newSelectedSlide - 1) * totalCardsOnSlide + 1;\n\n    if (!isLoadingData && this.isNeedToLoadCards(newSelectedSlide)) {\n      this.getVideosData();\n      isLoadingDataStart = true;\n    }\n\n    this.setState(\n      {\n        ...(isLoadingDataStart && { isLoadingData: true }),\n        isSliderAnimated: true,\n        selectedSlide: newSelectedSlide,\n        numberFirstCardOnSelectedSlide,\n        mouseStartPoint: null,\n      },\n      () => {\n        this.updateSliderAnimatedState();\n      }\n    );\n  };\n\n  getVideosData = async () => {\n    let stateOptions;\n    const { videosDataMap } = this.state;\n    const currentVideosDataMap = new Map([...videosDataMap]);\n\n    try {\n      const videosIds = [];\n      const basicVideosData = await this.getBasicVideosData();\n      const {\n        nextPageToken = '',\n        items: basicVideosDataList,\n      } = basicVideosData;\n\n      basicVideosDataList.forEach(({ id: { videoId } }) => {\n        if (!currentVideosDataMap.has(videoId)) {\n          videosIds.push(videoId);\n        }\n      });\n\n      if (videosIds.length === 0) {\n        return false;\n      }\n\n      const extendedVideosData = await youTubeAPI.fetchExtendedVideosData(\n        videosIds\n      );\n      const { items: extendedVideosDataList } = extendedVideosData;\n\n      extendedVideosDataList.forEach(videoData => {\n        currentVideosDataMap.set(videoData.id, videoData);\n      });\n\n      if (currentVideosDataMap.size > 0) {\n        stateOptions = {\n          pageToken: nextPageToken,\n          videosDataMap: currentVideosDataMap,\n        };\n      } else {\n        stateOptions = {\n          alert: {\n            variant: 'warning',\n            text:\n              \"We are so sorry! We couldn't find any video for your request.\",\n          },\n        };\n      }\n    } catch (error) {\n      if (!currentVideosDataMap.size) {\n        stateOptions = {\n          alert: {\n            variant: 'warning',\n            text:\n              'Something was wrong! Check your network connection and try searching again.',\n          },\n        };\n      }\n    }\n\n    this.setState({\n      ...stateOptions,\n      showSpinner: false,\n      isLoadingData: false,\n    });\n\n    return true;\n  };\n\n  getBasicVideosData = async () => {\n    const { searchText, pageToken, maxVideoResults } = this.state;\n    const data = await youTubeAPI.fetchBasicVideosData(\n      searchText,\n      pageToken,\n      maxVideoResults\n    );\n\n    return data;\n  };\n\n  updateSliderAnimatedState = () => {\n    window.setTimeout(() => {\n      this.setState({\n        isSliderAnimated: false,\n      });\n    }, ANIMATION_DURATION);\n  };\n\n  canChangeSlide = direction => {\n    const { selectedSlide, isSliderAnimated } = this.state;\n    const totalSlides = this.getTotalSlides();\n\n    if (isSliderAnimated) {\n      return false;\n    }\n\n    if (direction === 'prev' && selectedSlide === 1) {\n      return false;\n    }\n\n    if (direction === 'next' && totalSlides === selectedSlide) {\n      return false;\n    }\n\n    return true;\n  };\n\n  isNeedToLoadCards = selectedSlide => {\n    const { pageToken } = this.state;\n    const totalSlides = this.getTotalSlides();\n\n    if (!pageToken) {\n      return false;\n    }\n\n    if (selectedSlide <= totalSlides - 3) {\n      return false;\n    }\n\n    return true;\n  };\n\n  render() {\n    const {\n      pageToken,\n      searchText,\n      alert,\n      showSpinner,\n      videosDataMap,\n      selectedSlide,\n      totalCardsOnSlide,\n    } = this.state;\n    const { variant: alertVariant, text: alertText } = alert;\n\n    const totalSlides = this.getTotalSlides();\n    const isExistMoreSlides = pageToken !== '';\n\n    return (\n      <main className=\"wrapper\">\n        <Search\n          searchText={searchText}\n          onChange={this.handleSearchTextChange}\n          onSubmit={this.handleSubmitForm}\n        />\n        {videosDataMap.size !== 0 && (\n          <Slider\n            ref={this.sliderTrack}\n            videosDataMap={videosDataMap}\n            selectedSlide={selectedSlide}\n            totalSlides={totalSlides}\n            isExistMoreSlides={isExistMoreSlides}\n            totalCardsOnSlide={totalCardsOnSlide}\n            onControlClick={this.handleControlBtnClick}\n            onClick={this.handleSliderClick}\n            onMouseDown={this.handleDragStart}\n            onMouseMove={this.handleDrag}\n            onMouseUp={this.handleDragEnd}\n            onMouseLeave={this.handleDragEnd}\n            onTouchStart={this.handleDragStart}\n            onTouchMove={this.handleDrag}\n            onTouchEnd={this.handleDragEnd}\n          />\n        )}\n        {alertText && <Alert variant={alertVariant}>{alertText}</Alert>}\n        {showSpinner && <Spinner variant=\"circle\" />}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}