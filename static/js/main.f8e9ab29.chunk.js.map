{"version":3,"sources":["components/Button/index.js","components/Search/index.js","components/Alert/index.js","components/Loader/index.js","utilities/shrinkNumber.js","components/Card/index.js","utilities/constants.js","components/Slider/index.js","services/youtubeAPI.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["Button","variant","children","btnVariant","className","trim","defaultTypes","Search","searchText","onChange","onSubmit","type","value","placeholder","autoFocus","defaultProp","Alert","text","alertVariant","Loader","shrinkNumber","number","result","toFixed","endsWith","slice","Math","floor","VIDEO_PATH","Card","data","id","snippet","statistics","channelId","channelTitle","publishedAt","title","description","imageUrl","thumbnails","high","url","viewCount","readableDate","Date","toDateString","href","src","alt","dateTime","ANIMATION_DURATION","Slider","videosData","selectedSlide","totalCardsOnSlide","onClick","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","length","sliderWidth","scrollPos","sliderTrackStyles","width","transition","transform","disabledPrevBtn","disabledNextBtn","style","map","key","data-direction","disabled","BASE_PATH","KEY","YouTubeAPI","path","join","fetch","response","json","nextPageToken","maxVideoResults","pageToken","youTubeAPI","App","state","history","alert","isLoading","getTotalCardsOnSlide","numberFirstCardOnSelectedSlide","isSliderAnimated","mousePointsX","start","end","handleResizeWindow","e","pageWidth","currentTarget","innerWidth","newTotalCardsOnSlide","computeTotalCardsOnSlide","ceil","setState","turnAnimatedOff","setTimeout","changeSlide","direction","isNeedToLoadCards","getVideosData","handleControlBtnClick","target","dataset","canChangeSlide","handleSearchTextChange","handleSubmitForm","preventDefault","lastSearchText","push","setAlertOption","setNextPageToken","setVideosData","nextVideosData","concat","setMousePointsX","startPointX","endPointX","determineSwipeDirection","diff","swipeStart","swipeMove","swipeEnd","swipeDirection","handleMouseDown","clientX","handleTouchStart","touches","handleMouseMove","handleTouchMove","window","addEventListener","this","removeEventListener","getVideosId","fetchVideosData","items","fetchVideosId","videoId","alertText","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8e9ab29.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.scss';\n\nconst Button = ({ variant, children }) => {\n  const btnVariant = variant ? `btn--${variant}` : '';\n  return <button className={`btn ${btnVariant}`.trim()}>{children}</button>;\n};\n\nButton.propTypes = {\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nButton.defaultTypes = {\n  variant: '',\n  children: '',\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport './search.scss';\n\nconst Search = ({ searchText, onChange, onSubmit }) => (\n  <div className=\"search\">\n    <form className=\"search__form\" onSubmit={onSubmit}>\n      <input\n        className=\"search__input\"\n        type=\"text\"\n        value={searchText}\n        onChange={onChange}\n        placeholder=\"Type keywords to find video\"\n        autoFocus\n      />\n      <Button variant=\"grey\">Find</Button>\n    </form>\n  </div>\n);\n\nSearch.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nSearch.defaultProp = {\n  searchText: '',\n  onChange: () => {},\n  onSubmit: () => {},\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './alert.scss';\n\nconst Alert = ({ variant, text }) => {\n  const alertVariant = variant ? `alert--${variant}` : '';\n  return (\n    <div className={`alert ${alertVariant}`.trim()}>\n      {text}\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  text: PropTypes.string.isRequired,\n  variant: PropTypes.string,\n};\n\nAlert.defaultProp = {\n  variant: '',\n};\n\nexport default Alert;\n","import React from 'react';\nimport './loader.scss';\n\nconst Loader = () => (\n  <div className=\"loader\"></div>\n);\n\nexport default Loader;\n","const shrinkNumber = (number) => {\n  if (number / 1000000 >= 1) {\n    let result = (number / 1000000).toFixed(2);\n\n    if (result.endsWith('0')) {\n      result = result.slice(0, -1);\n    }\n\n    return result + 'M';\n  }\n\n  if (number / 1000 >= 1) {\n    return Math.floor(number / 1000) + 'K';\n  }\n\n  return number;\n}\n\nexport default shrinkNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shrinkNumber from '../../utilities/shrinkNumber';\nimport './card.scss';\n\nconst VIDEO_PATH = 'https://www.youtube.com/watch?v=';\nconst CHANNEL_PATH = 'https://www.youtube.com/channel/';\n\nconst Card = ({ data }) => {\n  const { id, snippet, statistics } = data;\n  const { channelId, channelTitle, publishedAt, title, description, thumbnails } = snippet;\n  const { high: { url: imageUrl } } = thumbnails;\n  const { viewCount } = statistics;\n  const readableDate = new Date(publishedAt).toDateString().slice(4);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__thumbnail\">\n        <a href={`${VIDEO_PATH}${id}`}>\n          <img className=\"card__img\" src={imageUrl} alt=\"\" />\n        </a>\n      </div>\n      <div className=\"card__content\">\n        <div className=\"card__details\">\n          <header className=\"card__heading\">\n            <span className=\"card__author\">\n              Channel by <a href={`${CHANNEL_PATH}${channelId}`}>{channelTitle}</a>\n            </span>\n            <h2 className=\"card__title\">\n              <a href={`${VIDEO_PATH}${id}`}>\n                {title}\n              </a>\n            </h2>\n          </header>\n          <p className=\"card__desc\">\n            <time className=\"card__date\" dateTime={publishedAt}>\n              {readableDate}\n            </time> <br />\n            {description}\n          </p>\n        </div>\n        <footer className=\"card__footer\">\n          <a className=\"btn\" href={`${VIDEO_PATH}${id}`}>Watch video</a>\n          <span className=\"card__views\">{shrinkNumber(viewCount)} views</span>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Card;\n","export const ANIMATION_DURATION = 500;\nexport const CARD_WIDTH = 310;\n","import React from 'react';\nimport Card from '../Card';\nimport { ANIMATION_DURATION, CARD_WIDTH } from '../../utilities/constants';\nimport './slider.scss';\n\nconst Slider = ({ videosData, selectedSlide, totalCardsOnSlide, onClick, onMouseDown, onMouseMove, onMouseUp, onTouchStart, onTouchMove, onTouchEnd }) => {\n\n  if (videosData.length === 0) {\n    return null;\n  }\n\n  const sliderWidth = videosData.length * CARD_WIDTH;\n  const scrollPos = (selectedSlide - 1) * CARD_WIDTH * totalCardsOnSlide;\n  const sliderTrackStyles = {\n    width: `${sliderWidth}px`,\n    transition: `transform ${ANIMATION_DURATION}ms ease-in-out 0s`,\n    transform: `translate3d(-${scrollPos}px, 0px, 0px)`,\n  };\n  const disabledPrevBtn = selectedSlide === 1 ? true : false;\n  const disabledNextBtn = videosData.length < totalCardsOnSlide ? true : false;\n\n  return (\n    <div className=\"slider\">\n      <div \n        className=\"slider__track\" style={sliderTrackStyles}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onTouchStart={onTouchStart}\n        onTouchMove={onTouchMove}\n        onTouchEnd={onTouchEnd}\n      >\n        {videosData.map((data) => (\n          <Card key={data.id} data={data} />\n        ))}\n      </div>\n      <div className=\"slider__controls\">\n        <button\n          data-direction=\"prev\"\n          className=\"slider__btn\"\n          disabled={disabledPrevBtn}\n          onClick={onClick}\n        >\n          Prev\n        </button>\n        <span className=\"slider__current-page\">{selectedSlide}</span>\n        <button\n          data-direction=\"next\"\n          className=\"slider__btn\"\n          disabled={disabledNextBtn}\n          onClick={onClick}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Slider;\n","const BASE_PATH = 'https://www.googleapis.com/youtube/v3';\nconst KEY = 'key=AIzaSyCTWC75i70moJLzyNh3tt4jzCljZcRkU8Y';\n\nclass YouTubeAPI {\n  async fetchVideosData(id) {\n    const path = `${BASE_PATH}/videos?${KEY}&part=snippet,statistics&id=${id.join(',')}`;\n    const response = await fetch(path);\n    return await response.json();\n  }\n\n  async fetchVideosId(searchText, nextPageToken, maxVideoResults) {\n    const pageToken = nextPageToken ? `&pageToken=${nextPageToken}` : '';\n    const path = `${BASE_PATH}/search?${KEY}&type=video&part=id\n      &q=${searchText}&maxResults=${maxVideoResults}${pageToken}`.trim();\n\n    const response = await fetch(path);\n    return await response.json();\n  }\n}\n\nexport default YouTubeAPI;\n","import React, { Component } from 'react';\nimport Search from '../../components/Search';\nimport Alert from '../../components/Alert';\nimport Loader from '../../components/Loader';\nimport Slider from '../../components/Slider';\nimport YouTubeAPI from '../../services/youtubeAPI';\nimport { ANIMATION_DURATION } from '../../utilities/constants';\nimport './app.scss';\n\nconst youTubeAPI = new YouTubeAPI();\n   \nclass App extends Component {\n  state = {\n    history: [],\n    searchText: '',\n    alert: {\n      text: 'You haven\\'t searched anything yet.',\n      variant: '',\n    },\n    isLoading: false,\n    maxVideoResults: 16,\n    nextPageToken: '',\n    selectedSlide: 1,\n    totalCardsOnSlide: this.getTotalCardsOnSlide(),\n    numberFirstCardOnSelectedSlide: 1,\n    isSliderAnimated: false,\n    mousePointsX: {\n      start: null,\n      end: null,\n    },\n    videosData: [],\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResizeWindow);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResizeWindow);\n  }\n\n  handleResizeWindow = (e) => {\n    const { totalCardsOnSlide, numberFirstCardOnSelectedSlide } = this.state;\n    const { innerWidth: pageWidth } = e.currentTarget;\n    const newTotalCardsOnSlide = this.computeTotalCardsOnSlide(pageWidth);\n\n    if (totalCardsOnSlide === newTotalCardsOnSlide) {\n      return false;\n    }\n\n    const selectedSlide = Math.ceil(numberFirstCardOnSelectedSlide / newTotalCardsOnSlide);\n\n    this.setState({\n      selectedSlide,\n      totalCardsOnSlide: newTotalCardsOnSlide,\n    });\n  }\n\n  getTotalCardsOnSlide() {\n    const { innerWidth: pageWidth } = window;\n    const totalCardsOnSlide = this.computeTotalCardsOnSlide(pageWidth);\n    return totalCardsOnSlide;\n  }\n\n  computeTotalCardsOnSlide(pageWidth) {\n    let totalCardsOnSlide = 0;\n\n    if (pageWidth >= 1280) {\n      totalCardsOnSlide = 4;\n    } else if (pageWidth >= 940 && pageWidth < 1280) {\n      totalCardsOnSlide = 3;\n    } else if (pageWidth >= 640 && pageWidth < 940) {\n      totalCardsOnSlide = 2;\n    } else {\n      totalCardsOnSlide = 1;\n    }\n\n    return totalCardsOnSlide;\n  } \n\n  turnAnimatedOff = () => {\n    setTimeout(() => {\n      this.setState({ isSliderAnimated: false });\n    }, ANIMATION_DURATION);\n  }\n\n  changeSlide = (direction) => {\n    const { totalCardsOnSlide } = this.state;\n    let { selectedSlide } = this.state;\n\n    if (direction === 'next') {\n      selectedSlide += 1;\n    } else {\n      selectedSlide -= 1;\n    }\n\n    const numberFirstCardOnSelectedSlide = totalCardsOnSlide * (selectedSlide - 1) + 1;\n    \n    this.setState({\n      selectedSlide,\n      numberFirstCardOnSelectedSlide,\n      isSliderAnimated: true,\n    }, () => {\n      if (this.isNeedToLoadCards()) {\n        this.getVideosData();\n      }\n    });\n\n    this.turnAnimatedOff();\n  }\n\n  isNeedToLoadCards = () => {\n    const { selectedSlide, videosData, totalCardsOnSlide } = this.state;\n    const numberCards = videosData.length;\n    const numberSlides = numberCards / totalCardsOnSlide;\n\n    // TODO: need to consider a case when we reached the last slide and prohibit switch a slide ahead\n    \n    if (selectedSlide >= numberSlides - 3) {\n      return true;\n    }\n\n    return false;\n  }\n\n  handleControlBtnClick = (e) => {\n    const { direction } = e.target.dataset;\n\n    if (!this.canChangeSlide(direction)) {\n      return false;\n    }\n\n    this.changeSlide(direction);\n  }\n\n  handleSearchTextChange = ({ target: { value } }) => {\n    this.setState({\n      searchText: value,\n    });\n  }\n\n  handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    const { history, searchText } = this.state;\n    const lastSearchText = history[history.length - 1] || '';\n\n    if (searchText === '') {\n      return false;\n    }\n\n    if (lastSearchText === searchText) {\n      return false;\n    }\n\n    history.push(searchText);\n\n    this.setState({\n      history,\n      selectedSlide: 1,\n      videosData: [],\n      alert: {\n        text: '',\n        variant: '',\n      },\n      isLoading: true, \n    });\n\n    this.getVideosData();\n  }\n\n  async getVideosData() {\n    try {\n      const id = await this.getVideosId();\n      const { items: videosData } = await youTubeAPI.fetchVideosData(id);\n\n      if (videosData.length === 0) {\n        const alertText = 'We are so sorry! We couldn\\'t find any video for your request.';\n        this.setAlertOption(alertText);\n      } else {\n        this.setVideosData(videosData);\n      }\n    } catch(error) {\n      // TODO: don't show error when we created a slider and other videos don't download\n      const alertText = 'Something was wrong! Check your network connection and try searching again.';\n      this.setAlertOption(alertText);\n    }\n  }\n\n  async getVideosId() {\n    const { searchText, nextPageToken: pageToken, maxVideoResults } = this.state;\n    const data = await youTubeAPI.fetchVideosId(searchText, pageToken, maxVideoResults);\n    const { nextPageToken, items } = data;\n    const id = items.map(\n      ({ id: { videoId } }) => videoId\n    );\n\n    this.setNextPageToken(nextPageToken);\n    return id;\n  }\n\n  setAlertOption = (text) => {\n    this.setState({\n      alert: {\n        text,\n        variant: 'warning',\n      },\n      isLoading: false,\n    })\n  }\n\n  setNextPageToken = (nextPageToken) => {\n    this.setState({ nextPageToken });\n  }\n\n  setVideosData = (nextVideosData) => {\n    const { videosData } = this.state;\n    this.setState({\n      isLoading: false,\n      videosData: videosData.concat(nextVideosData)\n    });\n  }\n\n  setMousePointsX = (startPointX, endPointX) => {\n    this.setState({\n      mousePointsX: {\n        start: startPointX,\n        end: endPointX,\n      },\n    });\n  }\n\n  determineSwipeDirection = () => {\n    const { mousePointsX } = this.state;\n    const { start: startPointX, end: endPointX } = mousePointsX;\n\n    if (!startPointX || !endPointX) {\n      return false;\n    }\n\n    const diff = startPointX - endPointX;\n\n    if (diff === 0) {\n      return false;\n    }\n\n    let direction = 'left';\n\n    if (diff < 0) {\n      direction = 'right'\n    }\n\n    return direction;\n  }\n\n  canChangeSlide = (direction) => {\n    const { selectedSlide, isSliderAnimated } = this.state;\n\n    if (isSliderAnimated) {\n      return false;\n    }\n\n    if (direction === 'prev' && selectedSlide === 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  swipeStart = (startPointX) => {\n    this.setMousePointsX(startPointX, null);\n  }\n\n  swipeMove = (endPointX) => {\n    const { mousePointsX } = this.state;\n    const { start: startPointX } = mousePointsX;\n \n    if (!startPointX) {\n      return false;\n    }\n\n    this.setMousePointsX(startPointX, endPointX);\n  }\n\n  swipeEnd = () => {\n    const swipeDirection = this.determineSwipeDirection();\n\n    if (!swipeDirection) {\n      return false;\n    }\n\n    let direction = 'next';\n\n    if (swipeDirection === 'right') {\n      direction = 'prev';\n    }\n\n    if (!this.canChangeSlide(direction)) {\n      return false;\n    }\n\n    this.changeSlide(direction);\n    this.setMousePointsX(null, null);\n  }\n\n  handleMouseDown = (e) => {\n    const { clientX: startPointX } = e;\n    this.swipeStart(startPointX);\n  }\n\n  handleTouchStart = (e) => {\n    const { clientX: startPointX } = e.touches[0];\n    this.swipeStart(startPointX);\n  }\n\n  handleMouseMove = (e) => {\n    const { clientX: endPointX } = e;\n    this.swipeMove(endPointX);\n  }\n\n  handleTouchMove = (e) => {\n    const { clientX: endPointX } = e.touches[0];\n    this.swipeMove(endPointX);\n  }\n\n  render() {\n    const {\n      searchText,\n      alert,\n      isLoading,\n      videosData,\n      selectedSlide,\n      totalCardsOnSlide,\n    } = this.state;\n    const {text: alertText, variant: alertVariant } = alert;\n\n    return (\n      <main className=\"wrapper\">\n        <Search\n          searchText={searchText}\n          onChange={this.handleSearchTextChange}\n          onSubmit={this.handleSubmitForm}\n        />\n        {videosData.length !== 0 && \n          <Slider \n            videosData={videosData}\n            selectedSlide={selectedSlide}\n            totalCardsOnSlide={totalCardsOnSlide}\n            onClick={this.handleControlBtnClick}\n            onMouseDown={this.handleMouseDown}\n            onMouseMove={this.handleMouseMove}\n            onMouseUp={this.swipeEnd}\n            onTouchStart={this.handleTouchStart}\n            onTouchMove={this.handleTouchMove}\n            onTouchEnd={this.swipeEnd}\n          />\n        }\n        {alertText && <Alert text={alertText} variant={alertVariant} />}\n        {isLoading && <Loader />}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}