{"version":3,"sources":["components/Button/index.js","components/Search/index.js","components/Alert/index.js","components/Spinner/index.js","utilities/trimNumber.js","components/Card/index.js","utilities/constants.js","components/Slider/index.js","services/youtubeAPI.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Button","Component","as","className","variant","color","disabled","props","modifierColor","classes","classNames","tabIndex","defaultProps","type","displayName","Search","searchText","onChange","onSubmit","value","placeholder","Alert","children","Spinner","elemClass","body","trimNumber","number","result","toFixed","endsWith","slice","Math","floor","dayjs","extend","relativeTime","VIDEO_PATH","Card","videoData","id","snippet","statistics","channelId","channelTitle","publishedAt","title","description","imageUrl","thumbnails","high","url","viewCount","oneLineDesc","replace","href","src","alt","dateTime","to","ANIMATION_DURATION","Slider","videosData","selectedSlide","totalSlides","isExistMoreSlides","totalCardsOnSlide","onClick","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","sliderWidth","length","scrollPos","sliderTrackStyles","width","transitionDuration","transform","isDisabledPrevBtn","isDisabledNextBtn","nextBtnCaption","role","style","map","key","data-direction","YouTubeAPI","path","buildUrlQueryString","typeResource","part","join","fetch","response","json","pageToken","maxResults","q","videosId","otherParams","Object","keys","forEach","param","App","state","alert","text","isLoading","maxVideoResults","getTotalCardsOnSlide","numberFirstCardOnSelectedSlide","isSliderAnimated","mousePointsX","start","end","handleResizeWindow","newTotalCardsOnSlide","ceil","setState","handleSearchTextChange","target","handleSubmitForm","e","preventDefault","getVideosData","handleControlBtnClick","direction","currentTarget","dataset","canChangeSlide","handleSlideChange","handleMouseDown","startPointX","clientX","handleSwipeStart","handleTouchStart","touches","handleMouseMove","endPointX","handleSwipeMove","handleTouchMove","updateMousePointsState","handleSwipeEnd","swipeDirection","getSwipeDirection","isNeedToLoadCards","updateSliderAnimatedState","a","getVideosId","youTubeAPI","fetchVideosData","newVideosData","items","updateAlertState","updateVideosDataState","fetchVideosId","data","nextPageToken","videoId","window","setTimeout","nextVideosData","concat","getTotalSlides","addEventListener","this","removeEventListener","diff","alertVariant","alertText","innerWidth","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28b36dfa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './button.scss';\n\nconst propTypes = {\n  as: PropTypes.elementType,\n  type: PropTypes.oneOf(['button', 'submit', 'reset', null]),\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', null]),\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n  as: 'button',\n  type: null,\n  className: null,\n  variant: null,\n  color: 'primary',\n  disabled: false,\n};\n\nconst Button = ({\n  as: Component,\n  className,\n  variant,\n  color,\n  disabled,\n  ...props\n}) => {\n  const prefix = 'btn';\n  const modifierColor = variant ? `${variant}-${color}` : color;\n  const classes = classNames(className, prefix, `${prefix}--${modifierColor}`);\n\n  if (disabled) {\n    props.disabled = disabled;\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <Component className={classes} {...props} />\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/Button';\nimport './search.scss';\n\nconst propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  onSubmit: () => {},\n};\n\nconst Search = ({ searchText, onChange, onSubmit }) => (\n  <div className=\"search\">\n    <form className=\"search__form\" onSubmit={onSubmit}>\n      <input\n        className=\"search__input\"\n        type=\"text\"\n        value={searchText}\n        onChange={onChange}\n        placeholder=\"Type keywords to find video\"\n      />\n      <Button className=\"search__btn\" type=\"submit\" color=\"grey\">\n        Find\n      </Button>\n    </form>\n  </div>\n);\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './alert.scss';\n\nconst propTypes = {\n  children: PropTypes.string.isRequired,\n  as: PropTypes.elementType,\n  variant: PropTypes.oneOf(['warning', null]),\n};\n\nconst defaultProps = {\n  as: 'div',\n  variant: null,\n};\n\nconst Alert = ({ as: Component, variant, children }) => {\n  const prefix = 'alert';\n  const classes = classNames(prefix, variant && `${prefix}--${variant}`);\n  return <Component className={classes}>{children}</Component>;\n};\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nAlert.displayName = 'Alert';\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './spinner.scss';\n\nconst propTypes = {\n  variant: PropTypes.string.isRequired,\n  as: PropTypes.elementType,\n};\n\nconst defaultProps = {\n  as: 'div',\n};\n\nconst Spinner = ({ as: Component, variant }) => {\n  const prefix = 'spinner';\n  const elemClass = `${prefix}__figure`;\n  const classes = classNames(elemClass, `${elemClass}--${variant}`);\n\n  let body = <span className={classes} />;\n\n  if (variant === 'bounce') {\n    body = (\n      <>\n        <span className={classes} />\n        <span className={classes} />\n        <span className={classes} />\n      </>\n    );\n  }\n\n  return <Component className={prefix}>{body}</Component>;\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nSpinner.displayName = 'Spinner';\n\nexport default Spinner;\n","const trimNumber = number => {\n  if (number / 1000000 >= 1) {\n    let result = (number / 1000000).toFixed(2);\n\n    if (result.endsWith('0')) {\n      result = result.slice(0, -1);\n    }\n\n    return `${result}M`;\n  }\n\n  if (number / 1000 >= 1) {\n    return `${Math.floor(number / 1000)}K`;\n  }\n\n  return number;\n};\n\nexport default trimNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport Button from 'components/Button';\nimport trimNumber from 'utilities/trimNumber';\nimport './card.scss';\n\ndayjs.extend(relativeTime);\n\nconst VIDEO_PATH = 'https://www.youtube.com/watch?v=';\nconst CHANNEL_PATH = 'https://www.youtube.com/channel/';\n\nconst propTypes = {\n  videoData: PropTypes.shape({\n    id: PropTypes.string,\n    snippet: PropTypes.shape({\n      channelId: PropTypes.string,\n      channelTitle: PropTypes.string,\n      publishedAt: PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n      thumbnails: PropTypes.shape({\n        high: PropTypes.shape({\n          url: PropTypes.string,\n        }),\n      }),\n    }),\n    statistics: PropTypes.shape({\n      viewCount: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nconst Card = ({ videoData }) => {\n  const { id, snippet, statistics } = videoData;\n  const {\n    channelId,\n    channelTitle,\n    publishedAt,\n    title,\n    description,\n    thumbnails,\n  } = snippet;\n  const {\n    high: { url: imageUrl },\n  } = thumbnails;\n  const { viewCount } = statistics;\n  const oneLineDesc = description.replace(/[\\n\\t]/g, '');\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__thumbnail\">\n        <a href={`${VIDEO_PATH}${id}`}>\n          <img className=\"card__img\" src={imageUrl} alt=\"\" />\n        </a>\n      </div>\n      <div className=\"card__body\">\n        <div className=\"card__author\">\n          <a href={`${CHANNEL_PATH}${channelId}`} className=\"card__author-link\">\n            {channelTitle}\n          </a>\n        </div>\n        <h2 className=\"card__title\">\n          <a\n            href={`${VIDEO_PATH}${id}`}\n            className=\"card__title-link\"\n            title={title}\n          >\n            {title}\n          </a>\n        </h2>\n        <div className=\"card__metadata\">\n          <span className=\"card__views\">{trimNumber(viewCount)} views</span>\n          <time className=\"card__date\" dateTime={publishedAt}>\n            {dayjs().to(publishedAt)}\n          </time>\n        </div>\n        <div className=\"card__desc\">\n          <p>{oneLineDesc || 'No description'}</p>\n        </div>\n        <Button\n          href={`${VIDEO_PATH}${id}`}\n          as=\"a\"\n          variant=\"outlined\"\n          color=\"red\"\n        >\n          Watch video\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = propTypes;\n\nexport default Card;\n","export const ANIMATION_DURATION = 500;\nexport const CARD_WIDTH = 310;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from 'components/Spinner';\nimport Card from 'components/Card';\nimport Button from 'components/Button';\nimport { ANIMATION_DURATION, CARD_WIDTH } from 'utilities/constants';\nimport './slider.scss';\n\nconst propTypes = {\n  videosData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedSlide: PropTypes.number,\n  totalSlides: PropTypes.number,\n  totalCardsOnSlide: PropTypes.number,\n  isExistMoreSlides: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n};\n\nconst defaultProps = {\n  selectedSlide: 1,\n  totalSlides: 1,\n  totalCardsOnSlide: 1,\n  isExistMoreSlides: true,\n  onClick: () => {},\n  onMouseDown: () => {},\n  onMouseMove: () => {},\n  onMouseUp: () => {},\n  onTouchStart: () => {},\n  onTouchMove: () => {},\n  onTouchEnd: () => {},\n};\n\nconst Slider = ({\n  videosData,\n  selectedSlide,\n  totalSlides,\n  isExistMoreSlides,\n  totalCardsOnSlide,\n  onClick,\n  onMouseDown,\n  onMouseMove,\n  onMouseUp,\n  onTouchStart,\n  onTouchMove,\n  onTouchEnd,\n}) => {\n  const sliderWidth = videosData.length * CARD_WIDTH;\n  const scrollPos = (selectedSlide - 1) * CARD_WIDTH * totalCardsOnSlide;\n  const sliderTrackStyles = {\n    width: `${sliderWidth}px`,\n    transitionDuration: `${ANIMATION_DURATION}ms`,\n    transform: `translate3d(-${scrollPos}px, 0, 0)`,\n  };\n  const isDisabledPrevBtn = selectedSlide === 1;\n  const isDisabledNextBtn = selectedSlide === totalSlides;\n\n  let nextBtnCaption = 'Next';\n  if (isExistMoreSlides && selectedSlide === totalSlides) {\n    nextBtnCaption = <Spinner variant=\"bounce\" as=\"span\" />;\n  }\n\n  return (\n    <div className=\"slider\">\n      <div\n        role=\"presentation\"\n        className=\"slider__content\"\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onTouchStart={onTouchStart}\n        onTouchMove={onTouchMove}\n        onTouchEnd={onTouchEnd}\n      >\n        <div className=\"slider__track\" style={sliderTrackStyles}>\n          {videosData.map(videoData => (\n            <Card key={videoData.id} videoData={videoData} />\n          ))}\n        </div>\n      </div>\n      <div className=\"slider__controls\">\n        <Button\n          type=\"button\"\n          className=\"slider__btn\"\n          color=\"grey\"\n          data-direction=\"prev\"\n          disabled={isDisabledPrevBtn}\n          onClick={onClick}\n        >\n          Prev\n        </Button>\n        <span className=\"slider__current-page\">{selectedSlide}</span>\n        <Button\n          type=\"button\"\n          className=\"slider__btn\"\n          color=\"grey\"\n          data-direction=\"next\"\n          disabled={isDisabledNextBtn}\n          onClick={onClick}\n        >\n          {nextBtnCaption}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nSlider.propTypes = propTypes;\nSlider.defaultProps = defaultProps;\n\nexport default Slider;\n","const BASE_PATH = 'https://www.googleapis.com/youtube/v3';\nconst KEY = 'key=AIzaSyCTWC75i70moJLzyNh3tt4jzCljZcRkU8Y';\n\nclass YouTubeAPI {\n  static async fetchVideosData(id) {\n    const path = YouTubeAPI.buildUrlQueryString({\n      typeResource: 'videos',\n      part: 'snippet,statistics',\n      id: id.join(','),\n    });\n    const response = await fetch(path);\n    const videosData = response.json();\n    return videosData;\n  }\n\n  static async fetchVideosId(searchText, pageToken, maxResults) {\n    const path = YouTubeAPI.buildUrlQueryString({\n      typeResource: 'search',\n      type: 'video',\n      part: 'id',\n      q: searchText,\n      maxResults,\n      ...(pageToken && { pageToken }),\n    });\n    const response = await fetch(path);\n    const videosId = response.json();\n    return videosId;\n  }\n\n  static buildUrlQueryString({ typeResource, ...otherParams }) {\n    let path = `${BASE_PATH}/${typeResource}?${KEY}`;\n\n    Object.keys(otherParams).forEach(param => {\n      path += `&${param}=${otherParams[param]}`;\n    });\n\n    return path;\n  }\n}\n\nexport default YouTubeAPI;\n","import React, { Component } from 'react';\n\nimport Search from 'components/Search';\nimport Alert from 'components/Alert';\nimport Spinner from 'components/Spinner';\nimport Slider from 'components/Slider';\nimport youTubeAPI from 'services/youtubeAPI';\nimport { ANIMATION_DURATION } from 'utilities/constants';\nimport './app.scss';\n\nclass App extends Component {\n  state = {\n    searchText: '',\n    alert: {\n      text: \"You haven't searched anything yet.\",\n      variant: null,\n    },\n    isLoading: false,\n    maxVideoResults: 16,\n    pageToken: '',\n    selectedSlide: 1,\n    totalCardsOnSlide: App.getTotalCardsOnSlide(),\n    numberFirstCardOnSelectedSlide: 1,\n    isSliderAnimated: false,\n    mousePointsX: {\n      start: null,\n      end: null,\n    },\n    videosData: [],\n  };\n\n  static getTotalCardsOnSlide() {\n    const { innerWidth } = window;\n    let totalCardsOnSlide = 0;\n\n    if (innerWidth >= 1280) {\n      totalCardsOnSlide = 4;\n    } else if (innerWidth >= 940 && innerWidth < 1280) {\n      totalCardsOnSlide = 3;\n    } else if (innerWidth >= 640 && innerWidth < 940) {\n      totalCardsOnSlide = 2;\n    } else {\n      totalCardsOnSlide = 1;\n    }\n\n    return totalCardsOnSlide;\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResizeWindow);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResizeWindow);\n  }\n\n  getTotalSlides() {\n    const { videosData, totalCardsOnSlide } = this.state;\n    return Math.ceil(videosData.length / totalCardsOnSlide);\n  }\n\n  getSwipeDirection() {\n    const { mousePointsX } = this.state;\n    const { start: startPointX, end: endPointX } = mousePointsX;\n\n    if (!startPointX || !endPointX) {\n      return false;\n    }\n\n    const diff = startPointX - endPointX;\n\n    if (diff === 0) {\n      return false;\n    }\n\n    let direction = 'left';\n\n    if (diff < 0) {\n      direction = 'right';\n    }\n\n    return direction;\n  }\n\n  handleResizeWindow = () => {\n    const { totalCardsOnSlide, numberFirstCardOnSelectedSlide } = this.state;\n    const newTotalCardsOnSlide = App.getTotalCardsOnSlide();\n\n    if (totalCardsOnSlide === newTotalCardsOnSlide) {\n      return false;\n    }\n\n    const selectedSlide = Math.ceil(\n      numberFirstCardOnSelectedSlide / newTotalCardsOnSlide\n    );\n\n    this.setState({\n      selectedSlide,\n      totalCardsOnSlide: newTotalCardsOnSlide,\n    });\n\n    return true;\n  };\n\n  handleSearchTextChange = ({ target: { value } }) => {\n    this.setState({\n      searchText: value,\n    });\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n\n    const { searchText } = this.state;\n\n    if (searchText === '') {\n      return false;\n    }\n\n    this.setState(\n      {\n        selectedSlide: 1,\n        videosData: [],\n        pageToken: '',\n        alert: {\n          text: null,\n          variant: null,\n        },\n        isLoading: true,\n      },\n      () => {\n        this.getVideosData();\n      }\n    );\n\n    return true;\n  };\n\n  handleControlBtnClick = e => {\n    const { direction } = e.currentTarget.dataset;\n\n    if (!this.canChangeSlide(direction)) {\n      return false;\n    }\n\n    this.handleSlideChange(direction);\n    return true;\n  };\n\n  handleMouseDown = e => {\n    const { clientX: startPointX } = e;\n    this.handleSwipeStart(startPointX);\n  };\n\n  handleTouchStart = e => {\n    const { clientX: startPointX } = e.touches[0];\n    this.handleSwipeStart(startPointX);\n  };\n\n  handleMouseMove = e => {\n    const { clientX: endPointX } = e;\n    this.handleSwipeMove(endPointX);\n  };\n\n  handleTouchMove = e => {\n    const { clientX: endPointX } = e.touches[0];\n    this.handleSwipeMove(endPointX);\n  };\n\n  handleSwipeStart = startPointX => {\n    this.updateMousePointsState(startPointX, null);\n  };\n\n  handleSwipeMove = endPointX => {\n    const { mousePointsX } = this.state;\n    const { start: startPointX } = mousePointsX;\n\n    if (!startPointX) {\n      return false;\n    }\n\n    this.updateMousePointsState(startPointX, endPointX);\n    return true;\n  };\n\n  handleSwipeEnd = () => {\n    const swipeDirection = this.getSwipeDirection();\n\n    if (!swipeDirection) {\n      return false;\n    }\n\n    let direction = 'next';\n\n    if (swipeDirection === 'right') {\n      direction = 'prev';\n    }\n\n    if (!this.canChangeSlide(direction)) {\n      return false;\n    }\n\n    this.handleSlideChange(direction);\n    this.updateMousePointsState(null, null);\n\n    return true;\n  };\n\n  handleSlideChange = direction => {\n    const { totalCardsOnSlide } = this.state;\n    let { selectedSlide } = this.state;\n\n    if (direction === 'next') {\n      selectedSlide += 1;\n    } else {\n      selectedSlide -= 1;\n    }\n\n    const numberFirstCardOnSelectedSlide =\n      (selectedSlide - 1) * totalCardsOnSlide + 1;\n\n    this.setState(\n      {\n        selectedSlide,\n        numberFirstCardOnSelectedSlide,\n        isSliderAnimated: true,\n      },\n      () => {\n        if (this.isNeedToLoadCards()) {\n          this.getVideosData();\n        }\n        this.updateSliderAnimatedState();\n      }\n    );\n  };\n\n  getVideosData = async () => {\n    const { videosData } = this.state;\n\n    try {\n      const id = await this.getVideosId();\n      const { items: newVideosData } = await youTubeAPI.fetchVideosData(id);\n\n      if (newVideosData.length === 0) {\n        this.updateAlertState({\n          variant: 'warning',\n          text: \"We are so sorry! We couldn't find any video for your request.\",\n        });\n      } else {\n        this.updateVideosDataState(newVideosData);\n      }\n    } catch (error) {\n      if (!videosData.length) {\n        this.updateAlertState({\n          variant: 'warning',\n          text:\n            'Something was wrong! Check your network connection and try searching again.',\n        });\n      }\n    }\n  };\n\n  getVideosId = async () => {\n    const { searchText, pageToken, maxVideoResults } = this.state;\n    const data = await youTubeAPI.fetchVideosId(\n      searchText,\n      pageToken,\n      maxVideoResults\n    );\n    const { nextPageToken = '', items } = data;\n    const id = items.map(({ id: { videoId } }) => videoId);\n\n    this.setState({ pageToken: nextPageToken });\n    return id;\n  };\n\n  updateSliderAnimatedState = () => {\n    const { isSliderAnimated } = this.state;\n\n    window.setTimeout(() => {\n      this.setState({\n        isSliderAnimated: !isSliderAnimated,\n      });\n    }, ANIMATION_DURATION);\n  };\n\n  updateAlertState = alert => {\n    this.setState({\n      alert,\n      isLoading: false,\n    });\n  };\n\n  updateVideosDataState = nextVideosData => {\n    const { videosData } = this.state;\n    this.setState({\n      isLoading: false,\n      videosData: videosData.concat(nextVideosData),\n    });\n  };\n\n  updateMousePointsState = (startPointX, endPointX) => {\n    this.setState({\n      mousePointsX: {\n        start: startPointX,\n        end: endPointX,\n      },\n    });\n  };\n\n  canChangeSlide = direction => {\n    const { selectedSlide, isSliderAnimated } = this.state;\n    const totalSlides = this.getTotalSlides();\n\n    if (isSliderAnimated) {\n      return false;\n    }\n\n    if (direction === 'prev' && selectedSlide === 1) {\n      return false;\n    }\n\n    if (direction === 'next' && totalSlides === selectedSlide) {\n      return false;\n    }\n\n    return true;\n  };\n\n  isNeedToLoadCards = () => {\n    const { pageToken, selectedSlide } = this.state;\n    const totalSlides = this.getTotalSlides();\n\n    if (!pageToken) {\n      return false;\n    }\n\n    if (selectedSlide <= totalSlides - 3) {\n      return false;\n    }\n\n    return true;\n  };\n\n  render() {\n    const {\n      pageToken,\n      searchText,\n      alert,\n      isLoading,\n      videosData,\n      selectedSlide,\n      totalCardsOnSlide,\n    } = this.state;\n    const { variant: alertVariant, text: alertText } = alert;\n\n    const totalSlides = this.getTotalSlides();\n    const isExistMoreSlides = pageToken !== '';\n\n    return (\n      <main className=\"wrapper\">\n        <Search\n          searchText={searchText}\n          onChange={this.handleSearchTextChange}\n          onSubmit={this.handleSubmitForm}\n        />\n        {videosData.length !== 0 && (\n          <Slider\n            videosData={videosData}\n            selectedSlide={selectedSlide}\n            totalSlides={totalSlides}\n            isExistMoreSlides={isExistMoreSlides}\n            totalCardsOnSlide={totalCardsOnSlide}\n            onClick={this.handleControlBtnClick}\n            onMouseDown={this.handleMouseDown}\n            onMouseMove={this.handleMouseMove}\n            onMouseUp={this.handleSwipeEnd}\n            onTouchStart={this.handleTouchStart}\n            onTouchMove={this.handleTouchMove}\n            onTouchEnd={this.handleSwipeEnd}\n          />\n        )}\n        {alertText && <Alert variant={alertVariant}>{alertText}</Alert>}\n        {isLoading && <Spinner variant=\"circle\" />}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}